// Code generated by go-swagger; DO NOT EDIT.

package access_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/soopsio/mgmt/api/v1/models"
)

// GetAccessKeyOKCode is the HTTP code returned for type GetAccessKeyOK
const GetAccessKeyOKCode int = 200

/*GetAccessKeyOK 返回 AccessKey

swagger:response getAccessKeyOK
*/
type GetAccessKeyOK struct {

	/*
	  In: Body
	*/
	Payload *models.AccessKey `json:"body,omitempty"`
}

// NewGetAccessKeyOK creates GetAccessKeyOK with default headers values
func NewGetAccessKeyOK() *GetAccessKeyOK {
	return &GetAccessKeyOK{}
}

// WithPayload adds the payload to the get access key o k response
func (o *GetAccessKeyOK) WithPayload(payload *models.AccessKey) *GetAccessKeyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get access key o k response
func (o *GetAccessKeyOK) SetPayload(payload *models.AccessKey) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAccessKeyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetAccessKeyDefault Unexpected error

swagger:response getAccessKeyDefault
*/
type GetAccessKeyDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAccessKeyDefault creates GetAccessKeyDefault with default headers values
func NewGetAccessKeyDefault(code int) *GetAccessKeyDefault {
	if code <= 0 {
		code = 500
	}

	return &GetAccessKeyDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get access key default response
func (o *GetAccessKeyDefault) WithStatusCode(code int) *GetAccessKeyDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get access key default response
func (o *GetAccessKeyDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get access key default response
func (o *GetAccessKeyDefault) WithPayload(payload *models.Error) *GetAccessKeyDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get access key default response
func (o *GetAccessKeyDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAccessKeyDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
