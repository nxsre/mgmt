// Code generated by go-swagger; DO NOT EDIT.

package access_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/soopsio/mgmt/api/v1/models"
)

// DeleteAccessKeyCreatedCode is the HTTP code returned for type DeleteAccessKeyCreated
const DeleteAccessKeyCreatedCode int = 201

/*DeleteAccessKeyCreated 无返回值

swagger:response deleteAccessKeyCreated
*/
type DeleteAccessKeyCreated struct {
}

// NewDeleteAccessKeyCreated creates DeleteAccessKeyCreated with default headers values
func NewDeleteAccessKeyCreated() *DeleteAccessKeyCreated {
	return &DeleteAccessKeyCreated{}
}

// WriteResponse to the client
func (o *DeleteAccessKeyCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

/*DeleteAccessKeyDefault Unexpected error

swagger:response deleteAccessKeyDefault
*/
type DeleteAccessKeyDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteAccessKeyDefault creates DeleteAccessKeyDefault with default headers values
func NewDeleteAccessKeyDefault(code int) *DeleteAccessKeyDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteAccessKeyDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete access key default response
func (o *DeleteAccessKeyDefault) WithStatusCode(code int) *DeleteAccessKeyDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete access key default response
func (o *DeleteAccessKeyDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete access key default response
func (o *DeleteAccessKeyDefault) WithPayload(payload *models.Error) *DeleteAccessKeyDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete access key default response
func (o *DeleteAccessKeyDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAccessKeyDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
